[
  3,
  1,
  null,
  null,
  1,
  null,
  null,
  1,
  null,
  null,
  1,
  null,
  null,
  {
    sourceCode: "var lexer;\n// custom lexer...\n  console.log('oh boy!');\n  var lexer = {\n    lex: function () {\n      return 1;\n    },\n    setInput: function (s, yy) {\n      console.log('setInput: ', s, yy);\n    },\n    options: {\n\n    },\n    ERROR: 2,\n    EOF: 1, \n  };\n",
    options: {
      lexerActionsUseYYLENG: "???",
      lexerActionsUseYYLINENO: "???",
      lexerActionsUseYYTEXT: "???",
      lexerActionsUseYYLOC: "???",
      lexerActionsUseParseError: "???",
      lexerActionsUseYYERROR: "???",
      lexerActionsUseLocationTracking: "???",
      lexerActionsUseMore: "???",
      lexerActionsUseUnput: "???",
      lexerActionsUseReject: "???",
      lexerActionsUseLess: "???",
      lexerActionsUseDisplayAPIs: "???",
      lexerActionsUseDescribeYYLOC: "???",
      lex_rule_dictionary: {
        rules: [],
        macros: {},
        startConditions: {},
        codeSections: [
          {
            qualifier: "init",
            include: "console.log('init');"
          },
          {
            qualifier: "__misc__",
            include: "console.log('_x_misc_x_');"
          }
        ],
        importDecls: [],
        unknownDecls: [],
        actionInclude: "// custom lexer...\n  console.log('oh boy!');\n  var lexer = {\n    lex: function () {\n      return 1;\n    },\n    setInput: function (s, yy) {\n      console.log('setInput: ', s, yy);\n    },\n    options: {\n\n    },\n    ERROR: 2,\n    EOF: 1, \n  };"
      },
      options: {
        moduleType: "commonjs",
        debug: false,
        enableDebugLogs: false,
        json: false,
        dumpSourceCodeOnFailure: true,
        throwErrorOnCompileFailure: true,
        defaultModuleName: "lexer",
        xregexp: false,
        lexerErrorsAreRecoverable: false,
        flex: false,
        backtrack_lexer: false,
        ranges: false,
        trackPosition: true,
        caseInsensitive: false,
        exportSourceCode: false,
        exportAST: false,
        prettyCfg: true,
        noMain: true
      },
      moduleType: "commonjs",
      conditions: {
        INITIAL: {
          rules: [],
          inclusive: true
        }
      },
      performAction: "function lexer__performAction(yy, yyrulenumber, YY_START) {\n            var yy_ = this;\n\n            // custom lexer...\n  console.log('oh boy!');\n  var lexer = {\n    lex: function () {\n      return 1;\n    },\n    setInput: function (s, yy) {\n      console.log('setInput: ', s, yy);\n    },\n    options: {\n\n    },\n    ERROR: 2,\n    EOF: 1, \n  };\nvar YYSTATE = YY_START;\nswitch(yyrulenumber) {\ndefault:\n  return this.simpleCaseActionClusters[yyrulenumber];\n}\n        }",
      caseHelperInclude: "{\n\n}",
      rules: [],
      macros: {},
      regular_rule_count: 0,
      simple_rule_count: 0,
      conditionStack: [
        "INITIAL"
      ],
      actionInclude: "// custom lexer...\n  console.log('oh boy!');\n  var lexer = {\n    lex: function () {\n      return 1;\n    },\n    setInput: function (s, yy) {\n      console.log('setInput: ', s, yy);\n    },\n    options: {\n\n    },\n    ERROR: 2,\n    EOF: 1, \n  };",
      moduleInclude: "",
      __in_rules_failure_analysis_mode__: false,
      exportSourceCode: {
        enabled: false
      },
      is_custom_lexer: true
    }
  }
]